apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "estuary.fullname" . }}-shuttle
  labels:
{{ include "estuary.labels" . | indent 4 }}
spec:
  serviceName: {{ include "estuary.fullname" . }}-shuttle
  podManagementPolicy: "Parallel"
  replicas: {{ .Values.estuary_shuttle.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "estuary.name" . }}-shuttle
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "estuary.name" . }}-shuttle
    spec:
    {{- with .Values.estuary_shuttle.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      serviceAccountName: {{ template "estuary.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-shuttle
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.estuary_shuttle.image.repository }}:{{ tpl .Values.estuary_shuttle.image.tag . }}"
          imagePullPolicy: {{ .Values.estuary_shuttle.image.pullPolicy }}
          volumeMounts:
          - name: data
            mountPath: /usr/src/estuary/data
          - name: private
            mountPath: /usr/estuary/private
          envFrom:
            - secretRef:
                name: {{ include "estuary.fullname" . }}
          ports:
            - name: http
              containerPort: 3005
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      {{- if and .Values.persistence.enabled .Values.estuary_shuttle.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ tpl .Values.estuary_shuttle.persistence.existingClaim $ }}
        - name: private
          persistentVolumeClaim:
            claimName: estuary-main-private
      {{- else if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        - name: private
          persistentVolumeClaim:
            claimName: estuary-main-private
      {{- else }}
        - name: private
          persistentVolumeClaim:
            claimName: estuary-main-private
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.estuary_shuttle.persistence.data.size | quote }}
      {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
      {{- end }}
      {{- end }}
